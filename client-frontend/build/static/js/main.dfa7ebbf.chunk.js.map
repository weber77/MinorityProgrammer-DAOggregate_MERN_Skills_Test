{"version":3,"sources":["http-common.js","services/dao.service.js","components/add-dao.component.js","components/dao-edit.component.js","components/dao-list.component.js","components/dao-display.component.js","App.js","serviceWorker.js","index.js"],"names":["axios","create","baseURL","headers","http","get","id","data","post","put","delete","AddTutorial","props","onChangeTitle","bind","onChangeDescription","onChangeFullName","onChangeDateFounded","onChangeDateCreated","onChangeLogoLink","onChangeCategory","onChangeGovTokenName","onChangeGovTokenSymbol","onChangeDaoStructure","onChangeVotingProcess","onChangeTVL","onChangeAUM","onChangeTechStack","onChangeNotes","onChangeBlockchain","onChangeHQ","saveDao","newDao","state","full_name","description","date_founded","date_created","logo_link","category","governance_token_name","governance_token_symbol","dao_structure","voting_process","AUM","TVL","tech_stack","notes","blockchain","headquarters","submitted","e","this","setState","title","target","value","console","log","DaoDataService","then","response","catch","minDate","Date","className","onClick","htmlFor","type","required","onChange","name","rows","placeholder","min","format","Component","Dao","getDao","updateDao","deleteDao","currentDao","message","match","params","prevState","update","_id","to","DaosList","onChangeSearchTitle","retrieveDaos","refreshList","categoryFilter","searchFilter","daos","daoProtocols","currentIndex","daoDataService","getAll","cat","filter","DAO_Protocols","map","dao","x","i","array","indexOf","push","sort","totalAUM","index","length","Number","isNaN","key","toUpperCase","src","alt","numTwitterFollowers","href","website_link","icon","faGlobe","social_media","faTwitter","DaoDisplay","history","App","exact","path","component","DaoList","AddDao","DaoEdit","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.dfa7ebbf.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport default axios.create({\n  baseURL: \"http://localhost:8080/api/\",\n  headers: {\n    \"Content-type\": \"application/json\"\n  }\n});","import http from \"../http-common\";\n\nclass DaoDataService {\n  getAll() {\n    return http.get(\"dao/findAll\");\n  }\n\n  get(id) {\n    return http.get(`dao/findById?id=${id}`);\n  }\n\n  getSocial(id) {\n    return http.get(`/findById?id=${id}`);\n  }\n\n  create(data) {\n    return http.post(\"dao/create\", data);\n  }\n\n  addSocialMedia(id, data) {\n    return http.post(`dao/addSocialMedia?id=${id}`, data);\n  }\n\n  update(id, data) {\n    return http.put(`dao/update?id=${id}`, data);\n  }\n\n  delete(id) {\n    return http.delete(`/dao/delete?id=${id}`);\n  }\n\n\n}\n\nexport default new DaoDataService();","\nimport React, { Component } from \"react\";\nimport DaoDataService from \"../services/dao.service\";\nimport { DatePickerComponent } from \"@syncfusion/ej2-react-calendars\";\n\n\nexport default class AddTutorial extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangeTitle = this.onChangeTitle.bind(this);\n    this.onChangeDescription = this.onChangeDescription.bind(this);\n\n    this.onChangeFullName = this.onChangeFullName.bind(this);\n    this.onChangeDescription = this.onChangeDescription.bind(this);\n    this.onChangeDateFounded = this.onChangeDateFounded.bind(this);\n    this.onChangeDateCreated = this.onChangeDateCreated.bind(this);\n    this.onChangeLogoLink = this.onChangeLogoLink.bind(this);\n    this.onChangeCategory = this.onChangeCategory.bind(this);\n    this.onChangeGovTokenName = this.onChangeGovTokenName.bind(this);\n    this.onChangeGovTokenSymbol = this.onChangeGovTokenSymbol.bind(this);\n    this.onChangeDaoStructure = this.onChangeDaoStructure.bind(this);\n    this.onChangeVotingProcess = this.onChangeVotingProcess.bind(this);\n    this.onChangeTVL = this.onChangeTVL.bind(this);\n    this.onChangeAUM = this.onChangeAUM.bind(this);\n    this.onChangeTechStack = this.onChangeTechStack.bind(this);\n    this.onChangeNotes = this.onChangeNotes.bind(this);\n    this.onChangeBlockchain = this.onChangeBlockchain.bind(this);\n    this.onChangeHQ = this.onChangeHQ.bind(this);\n\n    this.saveDao = this.saveDao.bind(this);\n    this.newDao = this.newDao.bind(this);\n\n    this.state = {\n      id: null,\n      full_name: \"\",\n      description: \"\",\n      date_founded: \"\",\n      date_created: \"\",\n      logo_link: \"\",\n      category: \"Protocol\", // drop down\n      governance_token_name: \"\",\n      governance_token_symbol: \"\",\n      dao_structure: \"shares\",  // drop down\n      voting_process: \"\",\n      AUM: 0,\n      TVL: 0,\n      tech_stack: \"\",\n      notes: \"\",\n      blockchain: \"Ethereum\", // drop down\n      headquarters: \"\",\n\n      submitted: false\n\n    };\n  }\n\n  onChangeTitle(e) {\n    this.setState({\n      title: e.target.value\n    });\n  }\n\n  onChangeFullName(e) {\n    this.setState({\n      full_name: e.target.value\n    });\n  }\n  onChangeDescription(e) {\n    this.setState({\n      description: e.target.value\n    });\n  }\n  onChangeDateFounded(e) {\n    this.setState({\n      date_founded: e.target.value\n    });\n  }\n  onChangeDateCreated(e) {\n    this.setState({\n      date_created: e.target.value\n    });\n  }\n  onChangeLogoLink(e) {\n    this.setState({\n      logo_link: e.target.value\n    });\n  }\n  onChangeCategory(e) {\n    this.setState({\n      category: e.target.value\n    });\n  }\n  onChangeGovTokenName(e) {\n    this.setState({\n      governance_token_name: e.target.value\n    });\n  }\n  onChangeGovTokenSymbol(e) {\n    this.setState({\n      governance_token_symbol: e.target.value\n    });\n  }\n  onChangeDaoStructure(e) {\n    this.setState({\n      dao_structure: e.target.value\n    });\n  }\n  onChangeVotingProcess(e) {\n    this.setState({\n      voting_process: e.target.value\n    });\n  }\n  onChangeTVL(e) {\n    this.setState({\n      TVL: e.target.value\n    });\n  }\n  onChangeAUM(e) {\n    this.setState({\n      TVL: e.target.value\n    });\n  }\n  onChangeTechStack(e) {\n    this.setState({\n      tech_stack: e.target.value\n    });\n  }\n  onChangeNotes(e) {\n    this.setState({\n      notes: e.target.value\n    });\n  }\n  onChangeBlockchain(e) {\n    this.setState({\n      blockchain: e.target.value\n    });\n  }\n  onChangeHQ(e) {\n    this.setState({\n      headquarters: e.target.value\n    });\n  }\n  saveDao() {\n    var data = {\n      full_name: this.state.full_name,\n      description: this.state.description,\n      date_founded: this.state.date_founded,\n      date_created: this.state.date_created,\n      logo_link: this.state.logo_link,\n      category: this.state.category, // drop down\n      governance_token_name: this.state.governance_token_name,\n      governance_token_symbol: this.state.governance_token_symbol,\n      dao_structure: this.state.dao_structure,  // drop down\n      voting_process: this.state.voting_process,\n      AUM: this.state.AUM, \n      TVL: this.state.TVL,\n      tech_stack: this.state.tech_stack,\n      notes: this.state.notes,\n      blockchain: this.state.blockchain, // drop down\n      headquarters: this.state.headquarters,\n    };\n\n    console.log(data);\n\n    DaoDataService.create(data)\n      .then(response => {\n        this.setState({\n          id: response.data.id,\n          full_name: response.data.full_name,\n          description: response.data.description,\n          date_founded: response.data.date_founded,\n          date_created: response.data.date_created,\n          logo_link: response.data.logo_link,\n          category: response.data.category, // drop down\n          governance_token_name: response.data.governance_token_name,\n          governance_token_symbol: response.data.governance_token_symbol,\n          dao_structure: response.data.dao_structure,  // drop down\n          voting_process: response.data.voting_process,\n          AUM: response.data.AUM, \n          TVL: response.data.TVL,\n          tech_stack: response.data.tech_stack,\n          notes: response.data.notes,\n          blockchain: response.data.blockchain, // drop down\n          headquarters: response.data.headquarters,\n          submitted: true\n        });\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n  newDao() {\n    this.setState({\n      id: null,\n      full_name: \"\",\n      description: \"\",\n      date_founded: \"2012-12-19\",\n      date_created: \"2012-12-19\",\n      logo_link: \"\",\n      category: \"\", // drop down\n      governance_token_name: \"\",\n      governance_token_symbol: \"\",\n      dao_structure: \"\",  // drop down\n      voting_process: \"\",\n      TVL: 0,\n      tech_stack: \"\",\n      notes: \"\",\n      blockchain: \"\", // drop down\n      headquarters: \"\",\n\n      submitted: false\n    });\n  }\n\n  render() {\n    // const dateValue = new Date(new Date().getFullYear(), new Date().getMonth()+1)\n    const minDate = new Date(1970, 1, 1)\n    return (\n      <div className=\"submit-form\">\n        {this.state.submitted ? (\n          <div>\n            <h4>You submitted successfully!</h4>\n            <button className=\"btn btn-success\" onClick={this.newDao}>\n              Add\n            </button>\n          </div>\n        ) : (\n          <div>\n            <div className=\"form-group\">\n              <label htmlFor=\"full_name\">Full Name</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"full_name\"\n                required\n                value={this.state.full_name}\n                onChange={this.onChangeFullName}\n                name=\"full_name\"\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"description\">Description</label>\n              <textarea\n                type=\"text\"\n                className=\"form-control\"\n                id=\"description\"\n                required\n                value={this.state.description}\n                onChange={this.onChangeDescription}\n                name=\"description\"\n                rows=\"5\"\n              />\n            </div>\n\n\n            <div className=\"form-group\">\n              <label htmlFor=\"date_founded\">Date Founded</label>\n\n              <DatePickerComponent\n                placeholder=\"Enter Date\"\n                className=\"form-control\"\n                id=\"date_founded\"\n                required=\"true\"\n                value={this.state.date_founded}\n                onChange={this.onChangeDateFounded}\n                name=\"date_founded\"\n                min={minDate}\n                // max={dateValue}\n\n                format=\"yyyy-MM-dd\">\n\n              </DatePickerComponent>\n            </div>\n\n\n            <div className=\"form-group\">\n              <label htmlFor=\"date_created\">Date Created</label>\n\n              <DatePickerComponent\n                placeholder=\"Enter Date\"\n                className=\"form-control\"\n                id=\"date_created\"\n                required\n                value={this.state.date_created}\n                onChange={this.onChangeDateCreated}\n                name=\"date_founded\"\n                min={minDate}\n                // max={dateValue}\n\n                format=\"yyyy-MM-dd\">\n\n              </DatePickerComponent>\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"logo_link\">Logo Link</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"logo_link\"\n                required\n                value={this.state.logo_link}\n                onChange={this.onChangeLogoLink}\n                name=\"logo_link\"\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"category\">Category</label>\n\n\n              <select\n                type=\"text\"\n                className=\"form-control\"\n                id=\"category\"\n                required\n                value={this.state.category}\n                onChange={this.onChangeCategory}\n                name=\"category\"\n              >\n                <option value=\"Protocol\">Protocol</option>\n                <option value=\"Service\">Service</option>\n                <option value=\"Grant\">Grant</option>\n                <option value=\"Media\">Media</option>\n                <option value=\"Social\">Social</option>\n                <option value=\"Investment\">Investment</option>\n                <option value=\"Platform\">Platform</option>\n                <option value=\"Collector\">Collector</option>\n\n              </select>\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"governance_token_name\">Governance Token Name</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"governance_token_name\"\n                required\n                value={this.state.governance_token_name}\n                onChange={this.onChangeGovTokenName}\n                name=\"governance_token_name\"\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"governance_token_symbol\">Governance Token Symbol</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"governance_token_symbol\"\n                required\n                value={this.state.governance_token_symbol}\n                onChange={this.onChangeGovTokenSymbol}\n                name=\"governance_token_symbol\"\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"dao_structure\">DAO Structure</label>\n\n              <select\n                type=\"text\"\n                className=\"form-control\"\n                id=\"dao_structure\"\n                required\n                value={this.state.dao_structure}\n                onChange={this.onChangeDaoStructure}\n                name=\"dao_structure\">\n                <option value=\"shares\">Shares</option>\n                <option value=\"gov_token\">Gov token</option>\n                <option value=\"tbd\">Tbd</option>\n              </select>\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"voting_process\">Voting Process</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"voting_process\"\n                required\n                value={this.state.voting_process}\n                onChange={this.onChangeVotingProcess}\n                name=\"voting_process\"\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"AUM\">AUM</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"AUM\"\n                required\n                value={this.state.AUM}\n                onChange={this.onChangeAUM}\n                name=\"AUM\"\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"TVL\">TVL</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"TVL\"\n                required\n                value={this.state.TVL}\n                onChange={this.onChangeTVL}\n                name=\"TVL\"\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"tech_stack\">Tech Stack</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"tech_stack\"\n                required\n                value={this.state.tech_stack}\n                onChange={this.onChangeTechStack}\n                name=\"tech_stack\"\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"notes\">Notes</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"notes\"\n                required\n                value={this.state.notes}\n                onChange={this.onChangeNotes}\n                name=\"notes\"\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"blockchain\">Blockchain</label>\n\n              <select\n                type=\"text\"\n                className=\"form-control\"\n                id=\"blockchain\"\n                required\n                value={this.state.blockchain}\n                onChange={this.onChangeBlockchain}\n                name=\"blockchain\">\n                <option value=\"Ethereum\">Ethereum</option>\n                <option value=\"Polygon\">Polygon</option>\n                <option value=\"Binance_Smart_Chain\">Binance Smart Chain</option>\n                <option value=\"Harmony\">Harmony</option>\n                <option value=\"Solana\">Solana</option>\n                <option value=\"Algorand\">Algorand</option>\n                <option value=\"NEAR\">NEAR</option>\n                <option value=\"IBM_Blockchain\">IBM Blockchain</option>\n                <option value=\"Hyperledger_Fabric\">Hyperledger Fabric</option>\n                <option value=\"Tezos\">Tezos</option>\n                <option value=\"EOSIO\">EOSIO</option>\n                <option value=\"Waves\">Waves</option>\n                <option value=\"Ripple\">Ripple</option>\n              </select>\n\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"headquarters\">Head Quarters</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"headquarters\"\n                required\n                value={this.state.headquarters}\n                onChange={this.onChangeHQ}\n                name=\"headquarters\"\n              />\n            </div>\n\n            <button onClick={this.saveDao} className=\"btn btn-success\">\n              Submit\n            </button>\n          </div>\n        )}\n      </div>\n    );\n  }\n}","import React, { Component } from \"react\";\nimport DaoDataService from \"../services/dao.service\";\nimport { Link } from \"react-router-dom\";\nimport { DatePickerComponent } from \"@syncfusion/ej2-react-calendars\";\n\n\nexport default class Dao extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangeFullName = this.onChangeFullName.bind(this);\n    this.onChangeDescription = this.onChangeDescription.bind(this);\n    this.onChangeDateFounded = this.onChangeDateFounded.bind(this);\n    this.onChangeDateCreated = this.onChangeDateCreated.bind(this);\n    this.onChangeLogoLink = this.onChangeLogoLink.bind(this);\n    this.onChangeCategory = this.onChangeCategory.bind(this);\n    this.onChangeGovTokenName = this.onChangeGovTokenName.bind(this);\n    this.onChangeGovTokenSymbol = this.onChangeGovTokenSymbol.bind(this);\n    this.onChangeDaoStructure = this.onChangeDaoStructure.bind(this);\n    this.onChangeVotingProcess = this.onChangeVotingProcess.bind(this);\n    this.onChangeTVL = this.onChangeTVL.bind(this);\n    this.onChangeAUM = this.onChangeAUM.bind(this);\n    this.onChangeTechStack = this.onChangeTechStack.bind(this);\n    this.onChangeNotes = this.onChangeNotes.bind(this);\n    this.onChangeBlockchain = this.onChangeBlockchain.bind(this);\n    this.onChangeHQ = this.onChangeHQ.bind(this);\n\n    this.getDao = this.getDao.bind(this);\n    this.updateDao = this.updateDao.bind(this);\n    this.deleteDao = this.deleteDao.bind(this);\n\n    this.state = {\n      currentDao: {\n        id: null,\n        full_name: \"\",\n        description: \"\",\n        date_founded: \"2012-12-19\",\n        date_created: \"2012-12-19\",\n        logo_link: \"\",\n        category: \"\", // drop down\n        governance_token_name: \"\",\n        governance_token_symbol: \"\",\n        dao_structure: \"\",  // drop down\n        voting_process: \"\",\n        AUM:0,\n        TVL: 0,\n        tech_stack: \"\",\n        notes: \"\",\n        blockchain: \"\", // drop down\n        headquarters: \"\",\n      },\n      message: \"\"\n    };\n  }\n\n  componentDidMount() {\n    this.getDao(this.props.match.params.id);\n    console.log(this.props.match.params.id);\n    \n  }\n\n  onChangeFullName(e) {\n    const full_name = e.target.value;\n\n    this.setState(function (prevState) {\n      return {\n        currentDao: {\n          ...prevState.currentDao,\n          full_name: full_name\n        }\n      };\n    });\n  }\n\n  onChangeDescription(e) {\n    const description = e.target.value;\n\n    this.setState(prevState => ({\n      currentDao: {\n        ...prevState.currentDao,\n        description: description\n      }\n    }));\n  }\n\n  onChangeDateFounded(e) {\n    const date_founded = e.target.value;\n\n    this.setState(prevState => ({\n      currentDao: {\n        ...prevState.currentDao,\n        date_founded: date_founded\n      }\n    }));\n  }\n  onChangeDateCreated(e) {\n    const date_created = e.target.value;\n\n    this.setState(prevState => ({\n      currentDao: {\n        ...prevState.currentDao,\n        date_created: date_created\n      }\n    }));\n  }\n  onChangeLogoLink(e) {\n    const logo_link = e.target.value;\n\n    this.setState(prevState => ({\n      currentDao: {\n        ...prevState.currentDao,\n        logo_link: logo_link\n      }\n    }));\n  }\n  onChangeCategory(e) {\n    const category = e.target.value;\n\n    this.setState(prevState => ({\n      currentDao: {\n        ...prevState.currentDao,\n        category: category\n      }\n    }));\n  }\n  onChangeGovTokenName(e) {\n    const governance_token_name = e.target.value;\n\n    this.setState(prevState => ({\n      currentDao: {\n        ...prevState.currentDao,\n        governance_token_name: governance_token_name\n      }\n    }));\n  }\n  onChangeGovTokenSymbol(e) {\n    const governance_token_symbol = e.target.value;\n\n    this.setState(prevState => ({\n      currentDao: {\n        ...prevState.currentDao,\n        governance_token_symbol: governance_token_symbol\n      }\n    }));\n  }\n  onChangeDaoStructure(e) {\n    const dao_structure = e.target.value;\n\n    this.setState(prevState => ({\n      currentDao: {\n        ...prevState.currentDao,\n        dao_structure: dao_structure\n      }\n    }));\n  }\n  onChangeVotingProcess(e) {\n    const voting_process = e.target.value;\n\n    this.setState(prevState => ({\n      currentDao: {\n        ...prevState.currentDao,\n        voting_process: voting_process\n      }\n    }));\n  }\n  onChangeAUM(e) {\n    const AUM = e.target.value;\n\n    this.setState(prevState => ({\n      currentDao: {\n        ...prevState.currentDao,\n        AUM: AUM\n      }\n    }));\n  }\n  onChangeTVL(e) {\n    const TVL = e.target.value;\n\n    this.setState(prevState => ({\n      currentDao: {\n        ...prevState.currentDao,\n        TVL: TVL\n      }\n    }));\n  }\n  onChangeTechStack(e) {\n    const tech_stack = e.target.value;\n\n    this.setState(prevState => ({\n      currentDao: {\n        ...prevState.currentDao,\n        tech_stack: tech_stack\n      }\n    }));\n  }\n  onChangeNotes(e) {\n    const notes = e.target.value;\n\n    this.setState(prevState => ({\n      currentDao: {\n        ...prevState.currentDao,\n        notes: notes\n      }\n    }));\n  }\n  onChangeBlockchain(e) {\n    const blockchain = e.target.value;\n\n    this.setState(prevState => ({\n      currentDao: {\n        ...prevState.currentDao,\n        blockchain: blockchain\n      }\n    }));\n  }\n  onChangeHQ(e) {\n    const headquarters = e.target.value;\n\n    this.setState(prevState => ({\n      currentDao: {\n        ...prevState.currentDao,\n        headquarters: headquarters\n      }\n    }));\n  }\n\n  getDao(id) {\n    DaoDataService.get(id)\n      .then(response => {\n        this.setState({\n          currentDao: response.data\n        });\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n\n  updateDao() {\n    DaoDataService.update(\n      this.state.currentDao._id,\n      this.state.currentDao\n    )\n      .then(response => {\n        console.log(response.data);\n        this.setState({\n          message: \"The dao was updated successfully!\"\n        });\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n  deleteDao() {\n    DaoDataService.delete(this.state.currentDao._id)\n      .then(response => {\n        console.log(response.data);\n        \n        // this.props.history.push('/daos');\n        this.setState({\n          message: \"The dao was deleted successfully!\"\n        });\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n  render() {\n    const { currentDao } = this.state;\n    const minDate = new Date(1970, 1, 1)\n\n    return (\n      <div>\n        {\n          <div className=\"edit-form\">\n            <h4>Dao</h4>\n            <form>\n              <div className=\"form-group\">\n                <label htmlFor=\"full_name\">FullName</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"full_name\"\n                  value={currentDao.full_name}\n                  onChange={this.onChangeFullName}\n                />\n              </div>\n              \n              <div className=\"form-group\">\n              <label htmlFor=\"description\">Description</label>\n              <textarea\n                type=\"text\"\n                className=\"form-control\"\n                id=\"description\"\n                value={currentDao.description}\n                onChange={this.onChangeDescription}\n                name=\"description\"\n                rows=\"5\"\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"date_founded\">Date Founded</label>\n\n              <DatePickerComponent\n                placeholder=\"Enter Date\"\n                className=\"form-control\"\n                id=\"date_founded\"\n                required=\"true\"\n                value={currentDao.date_founded}\n                onChange={this.onChangeDateFounded}\n                name=\"date_founded\"\n                min={minDate}\n                // max={dateValue}\n\n                format=\"yyyy-MM-dd\">\n\n              </DatePickerComponent>\n            </div>\n\n\n            <div className=\"form-group\">\n              <label htmlFor=\"date_created\">Date Created</label>\n\n              <DatePickerComponent\n                placeholder=\"Enter Date\"\n                className=\"form-control\"\n                id=\"date_created\"\n                required\n                value={currentDao.date_created}\n                onChange={this.onChangeDateCreated}\n                name=\"date_founded\"\n                min={minDate}\n                // max={dateValue}\n\n                format=\"yyyy-MM-dd\">\n\n              </DatePickerComponent>\n            </div>\n              \n\n              <div className=\"form-group\">\n                <label htmlFor=\"logo_link\">Logo Link</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"logo_link\"\n                  required\n                  value={currentDao.logo_link}\n                  onChange={this.onChangeLogoLink}\n\n                />\n              </div>\n\n              \n              <div className=\"form-group\">\n              <label htmlFor=\"category\">Category</label>\n\n\n              <select\n                type=\"text\"\n                className=\"form-control\"\n                id=\"category\"\n                required\n                value={currentDao.category}\n                onChange={this.onChangeCategory}\n                name=\"category\"\n              >\n                <option value=\"Protocol\">Protocol</option>\n                <option value=\"Service\">Service</option>\n                <option value=\"Grant\">Grant</option>\n                <option value=\"Media\">Media</option>\n                <option value=\"Social\">Social</option>\n                <option value=\"Investment\">Investment</option>\n                <option value=\"Platform\">Platform</option>\n                <option value=\"Collector\">Collector</option>\n\n              </select>\n            </div>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"governance_token_name\">Governance Token Name</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"governance_token_name\"\n                  required\n                  value={currentDao.governance_token_name}\n                  onChange={this.onChangeGovTokenName}\n\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"governance_token_symbol\">Governance Token Symbol</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"governance_token_symbol\"\n                  required\n                  value={currentDao.governance_token_symbol}\n                  onChange={this.onChangeGovTokenSymbol}\n\n                />\n              </div>\n\n              <div className=\"form-group\">\n              <label htmlFor=\"dao_structure\">DAO Structure</label>\n\n              <select\n                type=\"text\"\n                className=\"form-control\"\n                id=\"dao_structure\"\n                required\n                value={currentDao.dao_structure}\n                onChange={this.onChangeDaoStructure}\n                name=\"dao_structure\">\n                <option value=\"shares\">Shares</option>\n                <option value=\"gov_token\">Gov token</option>\n                <option value=\"tbd\">Tbd</option>\n              </select>\n            </div>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"voting_process\">Voting Process</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"voting_process\"\n                  required\n                  value={currentDao.voting_process}\n                  onChange={this.onChangeVotingProcess}\n\n                />\n              </div>\n              <div className=\"form-group\">\n              <label htmlFor=\"AUM\">AUM</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"AUM\"\n                required\n                value={currentDao.AUM}\n                onChange={this.onChangeAUM}\n                name=\"AUM\"\n              />\n            </div>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"TVL\">TVL</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"TVL\"\n                  required\n                  value={currentDao.TVL}\n                  onChange={this.onChangeTVL}\n\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"tech_stack\">Tech Stack</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"tech_stack\"\n                  required\n                  value={currentDao.tech_stack}\n                  onChange={this.onChangeTechStack}\n\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"notes\">Notes</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"notes\"\n                  required\n                  value={currentDao.notes}\n                  onChange={this.onChangeNotes}\n\n                />\n              </div>\n\n              <div className=\"form-group\">\n              <label htmlFor=\"blockchain\">Blockchain</label>\n\n              <select\n                type=\"text\"\n                className=\"form-control\"\n                id=\"blockchain\"\n                required\n                value={currentDao.blockchain}\n                onChange={this.onChangeBlockchain}\n                name=\"blockchain\">\n                <option value=\"Ethereum\">Ethereum</option>\n                <option value=\"Polygon\">Polygon</option>\n                <option value=\"Binance_Smart_Chain\">Binance Smart Chain</option>\n                <option value=\"Harmony\">Harmony</option>\n                <option value=\"Solana\">Solana</option>\n                <option value=\"Algorand\">Algorand</option>\n                <option value=\"NEAR\">NEAR</option>\n                <option value=\"IBM_Blockchain\">IBM Blockchain</option>\n                <option value=\"Hyperledger_Fabric\">Hyperledger Fabric</option>\n                <option value=\"Tezos\">Tezos</option>\n                <option value=\"EOSIO\">EOSIO</option>\n                <option value=\"Waves\">Waves</option>\n                <option value=\"Ripple\">Ripple</option>\n              </select>\n\n            </div>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"headquarters\">Head Quarters</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"headquarters\"\n                  required\n                  value={currentDao.headquarters}\n                  onChange={this.onChangeHQ}\n\n                />\n              </div>\n\n            </form>\n\n            \n            <Link\n            to={\"/allDao/\"}\n            className=\" \">\n            <button\n              className=\"badge badge-danger mr-2\"\n              onClick={this.deleteDao}\n            >\n              Delete\n            </button>\n            </Link>\n\n            \n            <Link\n                to={\"/daos_display/\" + currentDao._id}\n                className=\" badge-warning\"\n              >\n                <button\n              type=\"submit\"\n              className=\"badge badge-success\"\n              onClick={this.updateDao}\n            >\n              Update\n            </button>\n              </Link>\n          </div>\n          \n        \n      }\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport daoDataService from \"../services/dao.service\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\nimport { faGlobe } from '@fortawesome/free-solid-svg-icons';\n\n\n\n\nexport default class DaosList extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangeSearchTitle = this.onChangeSearchTitle.bind(this);\n    this.retrieveDaos = this.retrieveDaos.bind(this);\n    this.refreshList = this.refreshList.bind(this);\n    this.categoryFilter = this.categoryFilter.bind(this);\n    this.searchFilter = this.searchFilter.bind(this);\n\n    this.state = {\n      daos: [],\n      daoProtocols: [],\n      currentDao: null,\n      currentIndex: -1,\n      searchFilter: \"\"\n    };\n  }\n\n\n\n  componentDidMount() {\n    this.retrieveDaos();\n  }\n\n  onChangeSearchTitle(e) {\n    const searchFilter = e.target.value;\n\n    this.setState({\n      searchFilter: searchFilter\n    });\n  }\n\n  retrieveDaos() {\n    daoDataService.getAll()\n      .then(response => {\n        this.setState({\n          daos: response.data,\n          daoProtocols: response.data\n        });\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n  refreshList() {\n    this.retrieveDaos();\n    this.setState({\n      currentDao: null,\n      currentIndex: -1\n    });\n  }\n\n  categoryFilter(cat) {\n\n\n    this.setState({\n      daos: this.state.daoProtocols.filter(\n        ({ category }) =>\n          cat === category || cat === \"All\"\n      )\n    })\n  }\n\n\n\n  searchFilter() {\n    // this.setState({\n    //   currentDao: null,\n    //   currentIndex: -1\n    // });\n\n    // daoDataService.findByTitle(this.state.searchFilter)\n    //   .then(response => {\n    //     this.setState({\n    //       daos: response.data\n    //     });\n    //     console.log(response.data);\n    //   })\n    //   .catch(e => {\n    //     console.log(e);\n    //   });\n\n\n  }\n\n\n\n  render() {\n    const { searchFilter, daos, daoProtocols, currentIndex } = this.state;\n\n    // get unique category protocol\n    const uniqueProtocols = (x, i, array) => array.indexOf(x) === i;\n\n    const DAO_Protocols = daoProtocols.map(dao => dao.category).filter(\n      uniqueProtocols\n    );\n\n    DAO_Protocols.push(\"All\");\n    DAO_Protocols.sort();\n\n    let totalAUM = 0;\n    for (let index = 0; index < daos.length; index++) {\n      \n        if(Number.isNaN(daos[index].AUM))\n          continue;\n        totalAUM += daos[index].AUM;\n\n    }\n\n    const renderCategory = () => {\n\n      return DAO_Protocols.map((key, index) => {\n\n        return <button\n          // type=\"submit\"\n          className=\"badge badge-success\"\n\n          key={index}\n          onClick={() => this.categoryFilter(key)}\n        >\n          {key.toUpperCase()}\n        </button>\n      })\n    }\n\n    const renderHeader = () => {\n      let headerElement = ['name', 'category', 'AUM (USD)', 'twitter followers', 'founded date']\n\n      return headerElement.map((key, index) => {\n        return <th key={index} >{key.toUpperCase()}</th>\n      })\n    }\n\n    const renderBody = () => {\n      return daos && daos.map((dao, index) => {\n\n        return (\n\n          <tr className={\n            (index === currentIndex ? \"active\" : \"\")\n          }\n            // onClick={() => this.setActiveDao(dao, index)}\n            key={index}\n          >\n            <Link\n              to={\"/daos_display/\" + dao._id}\n              className=\"badge badge-warning\"\n            ><td><img src={dao.logo_link} alt=\"dao logo\" />{dao.full_name}</td>\n\n            </Link>\n            <td>{dao.category}</td>\n            <td>${dao.AUM}</td>\n            <td>{dao.numTwitterFollowers}</td>\n            <td>{dao.date_founded}</td>\n            <td><a href={dao.website_link}><FontAwesomeIcon icon={faGlobe} /></a></td>\n            <td><a href={dao.social_media}><FontAwesomeIcon icon={faTwitter} /></a></td>\n          </tr>\n        )\n      })\n    }\n\n    return (\n      <div className=\"list row\">\n        <div className=\"col-md-8\">\n          <div>\n            Number of DAOs <br />\n            {daos.length} <br /> \n            from 84\n          </div>\n          <div>\n            Total AUM (USD) <br />\n            {totalAUM} <br /> \n            from $3,152M\n          </div>\n          <div>\n            {renderCategory()}\n          </div>\n          <div className=\"input-group mb-3\">\n\n\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              placeholder=\"Search\"\n              value={searchFilter}\n              onChange={this.onChangeSearchTitle}\n            />\n            <div className=\"input-group-append\">\n              <button\n                className=\"btn btn-outline-secondary\"\n                type=\"button\"\n                onClick={this.searchFilter}\n              >\n                Search\n              </button>\n            </div>\n          </div>\n        </div>\n        <div className=\"col-md-6\">\n\n          <h4>Daos List</h4>\n\n\n          <table >\n            <thead>\n              <tr>{renderHeader()}</tr>\n            </thead>\n\n            <tbody>\n              {renderBody()}\n            </tbody>\n\n          </table>\n\n\n        </div>\n\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport DaoDataService from \"../services/dao.service\";\nimport { Link } from \"react-router-dom\";\n\n\nexport default class DaoDisplay extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangeFullName = this.onChangeFullName.bind(this);\n    this.onChangeDescription = this.onChangeDescription.bind(this);\n    this.onChangeDateFounded = this.onChangeDateFounded.bind(this);\n    this.onChangeDateCreated = this.onChangeDateCreated.bind(this);\n    this.onChangeLogoLink = this.onChangeLogoLink.bind(this);\n    this.onChangeCategory = this.onChangeCategory.bind(this);\n    this.onChangeGovTokenName = this.onChangeGovTokenName.bind(this);\n    this.onChangeGovTokenSymbol = this.onChangeGovTokenSymbol.bind(this);\n    this.onChangeDaoStructure = this.onChangeDaoStructure.bind(this);\n    this.onChangeVotingProcess = this.onChangeVotingProcess.bind(this);\n    this.onChangeTVL = this.onChangeTVL.bind(this);\n    this.onChangeTechStack = this.onChangeTechStack.bind(this);\n    this.onChangeNotes = this.onChangeNotes.bind(this);\n    this.onChangeBlockchain = this.onChangeBlockchain.bind(this);\n    this.onChangeHQ = this.onChangeHQ.bind(this);\n\n    this.getDao = this.getDao.bind(this);\n    this.updateDao = this.updateDao.bind(this);\n    this.deleteDao = this.deleteDao.bind(this);\n\n    this.state = {\n      currentDao: {\n        id: null,\n        full_name: \"\",\n        description: \"\",\n        date_founded: \"2012-12-19\",\n        date_created: \"2012-12-19\",\n        logo_link: \"\",\n        category: \"\", // drop down\n        governance_token_name: \"\",\n        governance_token_symbol: \"\",\n        dao_structure: \"\",  // drop down\n        voting_process: \"\",\n        TVL: 0,\n        tech_stack: \"\",\n        notes: \"\",\n        blockchain: \"\", // drop down\n        headquarters: \"\",\n      },\n      message: \"\"\n    };\n  }\n\n  componentDidMount() {\n    this.getDao(this.props.match.params.id);\n    \n  }\n\n  onChangeFullName(e) {\n    const full_name = e.target.value;\n\n    this.setState(function (prevState) {\n      return {\n        currentDao: {\n          ...prevState.currentDao,\n          full_name: full_name\n        }\n      };\n    });\n  }\n\n  onChangeDescription(e) {\n    const description = e.target.value;\n\n    this.setState(prevState => ({\n      currentDao: {\n        ...prevState.currentDao,\n        description: description\n      }\n    }));\n  }\n\n  onChangeDateFounded(e) {\n    const date_founded = e.target.value;\n\n    this.setState(prevState => ({\n      currentDao: {\n        ...prevState.currentDao,\n        date_founded: date_founded\n      }\n    }));\n  }\n  onChangeDateCreated(e) {\n    const date_created = e.target.value;\n\n    this.setState(prevState => ({\n      currentDao: {\n        ...prevState.currentDao,\n        date_created: date_created\n      }\n    }));\n  }\n  onChangeLogoLink(e) {\n    const logo_link = e.target.value;\n\n    this.setState(prevState => ({\n      currentDao: {\n        ...prevState.currentDao,\n        logo_link: logo_link\n      }\n    }));\n  }\n  onChangeCategory(e) {\n    const category = e.target.value;\n\n    this.setState(prevState => ({\n      currentDao: {\n        ...prevState.currentDao,\n        category: category\n      }\n    }));\n  }\n  onChangeGovTokenName(e) {\n    const governance_token_name = e.target.value;\n\n    this.setState(prevState => ({\n      currentDao: {\n        ...prevState.currentDao,\n        governance_token_name: governance_token_name\n      }\n    }));\n  }\n  onChangeGovTokenSymbol(e) {\n    const governance_token_symbol = e.target.value;\n\n    this.setState(prevState => ({\n      currentDao: {\n        ...prevState.currentDao,\n        governance_token_symbol: governance_token_symbol\n      }\n    }));\n  }\n  onChangeDaoStructure(e) {\n    const dao_structure = e.target.value;\n\n    this.setState(prevState => ({\n      currentDao: {\n        ...prevState.currentDao,\n        dao_structure: dao_structure\n      }\n    }));\n  }\n  onChangeVotingProcess(e) {\n    const voting_process = e.target.value;\n\n    this.setState(prevState => ({\n      currentDao: {\n        ...prevState.currentDao,\n        voting_process: voting_process\n      }\n    }));\n  }\n  onChangeTVL(e) {\n    const TVL = e.target.value;\n\n    this.setState(prevState => ({\n      currentDao: {\n        ...prevState.currentDao,\n        TVL: TVL\n      }\n    }));\n  }\n  onChangeTechStack(e) {\n    const tech_stack = e.target.value;\n\n    this.setState(prevState => ({\n      currentDao: {\n        ...prevState.currentDao,\n        tech_stack: tech_stack\n      }\n    }));\n  }\n  onChangeNotes(e) {\n    const notes = e.target.value;\n\n    this.setState(prevState => ({\n      currentDao: {\n        ...prevState.currentDao,\n        notes: notes\n      }\n    }));\n  }\n  onChangeBlockchain(e) {\n    const blockchain = e.target.value;\n\n    this.setState(prevState => ({\n      currentDao: {\n        ...prevState.currentDao,\n        blockchain: blockchain\n      }\n    }));\n  }\n  onChangeHQ(e) {\n    const headquarters = e.target.value;\n\n    this.setState(prevState => ({\n      currentDao: {\n        ...prevState.currentDao,\n        headquarters: headquarters\n      }\n    }));\n  }\n\n  getDao(id) {\n    DaoDataService.get(id)\n      .then(response => {\n        this.setState({\n          currentDao: response.data\n        });\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n  updateDao() {\n    DaoDataService.update(\n      this.state.currentDao.id,\n      this.state.currentDao\n    )\n      .then(response => {\n        console.log(response.data);\n        this.setState({\n          message: \"The dao was updated successfully!\"\n        });\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n  deleteDao() {\n    DaoDataService.delete(this.state.currentDao.id)\n      .then(response => {\n        console.log(response.data);\n        this.props.history.push('/daos')\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n  render() {\n    const { currentDao } = this.state;\n\n    return (\n      <div>\n        {\n          <div className=\"edit-form\">\n            <h4>Dao</h4>\n            <form>\n              <div className=\"form-group\">\n\n                <p> <strong>Full Name:</strong> {currentDao.full_name}</p>\n                <p> <strong>Description:</strong> {currentDao.description}</p>\n                <p> <strong>Date Founded:</strong> {currentDao.date_founded}</p>\n                <p> <strong>Date Created:</strong> {currentDao.date_created}</p>\n                <p> <strong>Category:</strong> {currentDao.category}</p>\n                <p> <strong>Governance Token Name:</strong> {currentDao.governance_token_name}</p>\n                <p> <strong>Governance Token Symbol:</strong> {currentDao.governance_token_symbol}</p>\n                <p> <strong>DAO Structure:</strong> {currentDao.dao_structure}</p>\n                <p> <strong>Voting Process:</strong> {currentDao.voting_process}</p>\n                <p> <strong>AUM:</strong> ${currentDao.AUM}</p>\n                <p> <strong>TVL:</strong> {currentDao.TVL}</p>\n                <p> <strong>Tech Stack:</strong> {currentDao.tech_stack}</p>\n                <p> <strong>Notes:</strong> {currentDao.notes}</p>\n                <p> <strong>Blockchain:</strong> {currentDao.blockchain}</p>\n                <p> <strong>Head Quarters:</strong> {currentDao.headquarters}</p>\n              </div>\n\n              <Link\n                to={\"/daos_edit/\" + currentDao._id}\n                className=\"badge badge-warning\"\n              >\n                Edit\n              </Link>\n              \n            </form>\n\n            \n\n            \n          </div>\n        \n    }\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Switch, Route, Link } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport \"./App.css\";\n\nimport AddDao from \"./components/add-dao.component\";\nimport DaoEdit from \"./components/dao-edit.component\";\nimport DaoList from \"./components/dao-list.component\";\nimport DaoDisplay from \"./components/dao-display.component\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\n          <Link to={\"/home\"} className=\"navbar-brand\">\n            DAOggregator\n          </Link>\n          <div className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to={\"/allDao\"} className=\"nav-link\">\n                Daos\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to={\"/addDao\"} className=\"nav-link\">\n                Add\n              </Link>\n            </li>\n          </div>\n        </nav>\n\n        <div className=\"container mt-3\">\n          <Switch>\n            <Route exact path={[\"/\", \"/allDao\"]} component={DaoList} />\n            <Route exact path=\"/addDao\" component={AddDao} />\n            <Route path=\"/daos_display/:id\" component={DaoDisplay} />\n            <Route path=\"/daos_edit/:id\" component={DaoEdit} />\n          </Switch>\n        </div>\n      </div>\n    );\n  }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}